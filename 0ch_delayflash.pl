#============================================================================================================
#	拡張機能 - 抑制くん
#	0ch_delayflash.pl
#	--------------------------------------------------------------------------------------------
#	かんりぶれ★ ( https://boumou.li/ )
#
#	Last up date 2024.12.15 ( エラー表示方法を変更 )
#============================================================================================================
package ZPL_delayflash;

#------------------------------------------------------------------------------------------------------------
#	拡張機能名称取得
#------------------------------------------------------------------------------------------------------------
sub getName
{
	return '抑制くん';
}

#------------------------------------------------------------------------------------------------------------
#	拡張機能説明取得
#------------------------------------------------------------------------------------------------------------
sub getExplanation
{
	return '速報BOTのスレ乱立を抑制';
}

#------------------------------------------------------------------------------------------------------------
#	拡張機能タイプ取得
#------------------------------------------------------------------------------------------------------------
sub getType
{
	return 16;
}

#------------------------------------------------------------------------------------------------------------
#	設定リスト取得 (0ch+ Only)
#------------------------------------------------------------------------------------------------------------
sub getConfig
{
	return {
		'delay'	=> {
			'default'		=> 1800,
			'valuetype'		=> 1,
			'description'	=> '前回のスレ立てから一定時間新スレを立てない(秒)',
		},
		'tt'	=> {
			'default'		=> 'スレッドタイトル',
			'valuetype'		=> 2,
			'description'	=> '直近の間引きスレタイ',
		},
		'_samba'	=> {
			'default'		=> 0,
			'valuetype'		=> 1,
			'description'	=> 'スレ立て日時 ※一時変数なのでいじらない',
		},
	};
}

#------------------------------------------------------------------------------------------------------------
#	拡張機能実行インタフェイス
#------------------------------------------------------------------------------------------------------------
sub execute
{
	my $this = shift;
	my ($Sys, $Form, $type) = @_;
	
	# 0ch本家では実行しない
	return 0 if (!$this->{'is0ch+'});

	# news1で実行
	return 0 if (!$Sys->Equal('BBS', 'news1'));

	# ID:qNewsFlashで実行
	return 0 if ($Form->Get('idpart') !~ /^ID:qNewsFlash/);

	if ($Sys->Equal('MODE', 1)) {
		my $delay = $this->GetConf('delay');
		my $tt = $this->GetConf('tt');
		my $samba = $this->GetConf('_samba');
		my $nowtime = time;

		# 前回のスレ立てからの経過時間とスレタイを判定
		if ($nowtime - $samba > $delay && $tt ne $Form->Get('subject')) {
			# スレ立て時間記録
			$this->SetConf('_samba', $nowtime);
		} else {
			# 間引きスレタイ記録
			$tt = $Form->Get('subject');
			$this->SetConf('tt', $tt);
			PrintBBSError($Sys, 500);
		}
	}
	return 0;
}

#------------------------------------------------------------------------------------------------------------
#	なんちゃってbbs.cgiエラーページ表示
#------------------------------------------------------------------------------------------------------------
sub PrintBBSError
{
	my ($Sys, $err) = @_;
	
	my $CGI = $Sys->Get('MainCGI');
	my $Page = $CGI->{'PAGE'};
	
	$Page->Print("Content-type: text/html\n\n");
	$Page->Print("<html><head><title>");
	$Page->Print("ERROR!</title></head><meta charset=\"Shift_JIS\"><!--nobanner-->\n");
	$Page->Print("<body><font color=red>エラーコード:${err}</font><hr>");
	
	$Page->Flush('', 0, 0);
	
	exit($err);
}

#------------------------------------------------------------------------------------------------------------
#	コンストラクタ
#------------------------------------------------------------------------------------------------------------
sub new
{
	my $class = shift;
	my ($Config) = @_;
	
	my $this = {};
	bless $this, $class;
	
	if (defined $Config) {
		$this->{'PLUGINCONF'} = $Config;
		$this->{'is0ch+'} = 1;
	}
	else {
		$this->{'CONFIG'} = $class->getConfig();
		$this->{'is0ch+'} = 0;
	}
	
	return $this;
}

#------------------------------------------------------------------------------------------------------------
#	設定値取得 (0ch+ Only)
#------------------------------------------------------------------------------------------------------------
sub GetConf
{
	my $this = shift;
	my ($key) = @_;
	if ($this->{'is0ch+'}) {
		return $this->{'PLUGINCONF'}->GetConfig($key);
	}
	elsif (defined $this->{'CONFIG'}->{$key}) {
		return $this->{'CONFIG'}->{$key}->{'default'};
	}
}

#------------------------------------------------------------------------------------------------------------
#	設定値設定 (0ch+ Only)
#------------------------------------------------------------------------------------------------------------
sub SetConf
{
	my $this = shift;
	my ($key, $val) = @_;
	if ($this->{'is0ch+'}) {
		$this->{'PLUGINCONF'}->SetConfig($key, $val);
	}
	elsif (defined $this->{'CONFIG'}->{$key}) {
		$this->{'CONFIG'}->{$key}->{'default'} = $val;
	}
	else {
		$this->{'CONFIG'}->{$key} = { 'default' => $val };
	}
}

#============================================================================================================
#	Module END
#============================================================================================================
1;
